package us.fyndr.api.admin.dbo;

import java.time.Instant;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.springframework.data.rest.core.annotation.Description;

/**
 * . Individual class contains registered user details whether it is a business
 * user or an individual user
 */
@Entity
@Table(name = "indv_master")
public class Individual {

    /**
     * The Autogenerated objId.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "objid")
    private Long objId;

    /**
     * The Objid of QrCodemaster.
     */
    @Column(name = "qrid")
    private Long qrid;

    /**
     * The Business Id.
     */
    @Description(value = "Business ID")
    @Column(name = "bizid")
    private Long businessId;

    /**
     * . The firstname of a user
     */
    @Description(value = "First Name of person")
    @Column(name = "first_name")
    private String firstName;

    /**
     * The Date of birth of User.
     */
    @Description(value = "Date of Birth")
    @Column(name = "yob")
    private String yob;

    /**
     * The Gender of User.
     */
    @Description(value = "Gender of customer")
    @Column(name = "gender")
    private String gender;

    /**
     * . The lastname of a user
     */
    @Description(value = "Last Name of person")
    @Column(name = "last_name")
    private String lastName;

    /**
     * The Fyndr handle.
     */
    @Description(value = "Fyndr Handle")
    @Column(name = "fyndr_handle")
    private String fyndrHandle;

    /**
     * . The phone number of user
     */
    @Description(value = "Phone number of person")
    @Column(name = "phone")
    private String phone;

    /**
     * . The country code of a user
     */
    @Description(value = "Country code of Individual.")
    @Column(name = "ctry_code")
    private String countryCode;

    /**
     * . The email id of a user
     */
    @Description(value = "Email Address of person")
    @Column(name = "email", unique = true)
    private String email;

    /**
     * . The account creation date of a user
     */
    @Description(value = "Creation date")
    @Column(name = "created_dt")
    private Instant createdDt;

    /**
     * . The address line 1 of a user's address
     */
    @Description(value = "Address Line 1 of person ")
    @Column(name = "address_line1")
    private String addressLine1;

    /**
     * . The address line 2 of a user's address
     */
    @Description(value = "Address Line 2 of person ")
    @Column(name = "address_line2")
    private String addressLine2;

    /**
     * . The city of a user
     */
    @Description(value = "City of person ")
    @Column(name = "city")
    private String city;

    /**
     * . The state of a user
     */
    @Description(value = "State of person ")
    @Column(name = "state")
    private String state;

    /**
     * . The country of a user
     */
    @Description(value = "Country of person ")
    @Column(name = "country")
    private String country;

    /**
     * . The postal code of a user
     */
    @Description(value = "Zip Code of person ")
    @Column(name = "postal_code")
    private String postalCode;

    /**
     * . The isBusiness accepts true or false isBusiness checks if a user is an
     * individual user or a business user
     */
    @Description(value = "Person related to business or self")
    @Column(name = "is_business")
    private boolean isBusiness;

    /**
     * . The account status of a user
     */
    @Enumerated(EnumType.STRING)
    @Column(name = "account_status")
    private AccountStatus accountStatus = AccountStatus.ACTIVE;

    /**
     * @return ObjId
     */
    public Long getObjId() {
        return objId;
    }

    /**
     * @param objid Setter function to set ObjId
     */
    public void setObjId(final Long objid) {
        this.objId = objid;
    }

    /**
     * @return the firstname of a user
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * @param firstName sets the firstname of a user
     */
    public void setFirstName(final String firstName) {
        this.firstName = firstName;
    }

    /**
     * @return the last name of a user
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * @param lastName sets the lastname of a user
     */
    public void setLastName(final String lastName) {
        this.lastName = lastName;
    }

    /**
     * @return the phonenumber of a user
     */
    public String getPhone() {
        return phone;
    }

    /**
     * @param phone sets the phonenumber of a user
     */
    public void setPhone(final String phone) {
        this.phone = phone;
    }

    /**
     * @return the countrycode of a user
     */
    public String getCountryCode() {
        return countryCode;
    }

    /**
     * @param countryCode sets the countrycode of a user
     */
    public void setCountryCode(final String countryCode) {
        this.countryCode = countryCode;
    }

    /**
     * @return the email of a user
     */
    public String getEmail() {
        return email;
    }

    /**
     * @param email sets the email of a user
     */
    public void setEmail(final String email) {
        this.email = email;
    }

    /**
     * @return the account creation date of a user
     */
    public Instant getCreatedDt() {
        return createdDt;
    }

    /**
     * @param createdDt sets the account creation date of a user
     */
    public void setCreatedDt(final Instant createdDt) {
        this.createdDt = createdDt;
    }

    /**
     * @return the addressline1 of a user
     */
    public String getAddressLine1() {
        return addressLine1;
    }

    /**
     * @param addressLine1 sets the addressline1 of a user
     */
    public void setAddressLine1(final String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    /**
     * @return the addressline2 of a user
     */
    public String getAddressLine2() {
        return addressLine2;
    }

    /**
     * @param addressLine2 sets the addressline2 of a user
     */
    public void setAddressLine2(final String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    /**
     * @return the city of a user
     */
    public String getCity() {
        return city;
    }

    /**
     * @param city sets the city of a user
     */
    public void setCity(final String city) {
        this.city = city;
    }

    /**
     * @return the state of a user
     */
    public String getState() {
        return state;
    }

    /**
     * @param state sets the state of a user
     */
    public void setState(final String state) {
        this.state = state;
    }

    /**
     * @return the country of a user
     */
    public String getCountry() {
        return country;
    }

    /**
     * @param country sets the country of a user
     */
    public void setCountry(final String country) {
        this.country = country;
    }

    /**
     * @return the postalcode of a user
     */
    public String getPostalCode() {
        return postalCode;
    }

    /**
     * @param postalCode sets the postalcode of a user
     */
    public void setPostalCode(final String postalCode) {
        this.postalCode = postalCode;
    }

    /**
     * @return Date of Birth of User
     */
    public String getYob() {
        return yob;
    }

    /**
     * @param yob Setter function to set Date of Birth of User.
     */
    public void setYob(final String yob) {
        this.yob = yob;
    }

    /**
     * @return Gender of User
     */
    public String getGender() {
        return gender;
    }

    /**
     * @param gender Setter function to set Gender of User
     */
    public void setGender(final String gender) {
        this.gender = gender;
    }

    /**
     * @return true if a user is a business user or false if a user is an individual
     *         user
     */
    public boolean isBusiness() {
        return isBusiness;
    }

    /**
     * @param isBusiness sets isBusiness - true or false
     */
    public void setIsBusiness(final boolean isBusiness) {
        this.isBusiness = isBusiness;
    }

    /**
     * @return the accountstatus of a user
     */
    public AccountStatus getAccountStatus() {
        return accountStatus;
    }

    /**
     * @param accountStatus sets the accountstatus of a user
     */
    public void setAccountStatus(final AccountStatus accountStatus) {
        this.accountStatus = accountStatus;
    }

    /**
     * @return Qr id of User.
     */
    public Long getQrid() {
        return qrid;
    }

    /**
     * @param qrid Setter function to set Qr Id of User
     */
    public void setQrid(final Long qrid) {
        this.qrid = qrid;
    }

    /**
     * @return Business Id of User
     */
    public Long getBusinessId() {
        return businessId;
    }

    /**
     * @param businessId Setter function to set business id
     */
    public void setBusinessId(final Long businessId) {
        this.businessId = businessId;
    }

    /**
     * @return Fyndr handle of User
     */
    public String getFyndrHandle() {
        return fyndrHandle;
    }

    /**
     * @param fyndrHandle Setter function to set fyndr Handle of User
     */
    public void setFyndrHandle(final String fyndrHandle) {
        this.fyndrHandle = fyndrHandle;
    }

    /**
     * The toString method.
     */
    @Override
    public String toString() {
        return "Individual [objId=" + objId + ", qrid=" + qrid + ", businessId=" + businessId + ", firstName="
                + firstName + ", yob=" + yob + ", gender=" + gender + ", lastName=" + lastName + ", fyndrHandle="
                + fyndrHandle + ", phone=" + phone + ", countryCode=" + countryCode + ", email=" + email
                + ", createdDt=" + createdDt + ", addressLine1=" + addressLine1 + ", addressLine2=" + addressLine2
                + ", city=" + city + ", state=" + state + ", country=" + country + ", postalCode=" + postalCode
                + ", isBusiness=" + isBusiness + ", accountStatus=" + accountStatus + "]";
    }

    /**
     * . The hashcode method
     */
    @Override
    public int hashCode() {
        return Objects.hash(accountStatus, addressLine1, addressLine2, businessId, city, country, countryCode, createdDt,
                email, firstName, isBusiness, lastName, objId, phone, postalCode, state, gender, yob, qrid);
    }

    /**
     * . The equals method
     */
    @Override
    public boolean equals(final Object obj) {
        if (this == obj) {
            return true;
        }
        if (!(obj instanceof Individual)) {
            return false;
        }
        Individual other = (Individual) obj;
        return accountStatus == other.accountStatus && Objects.equals(addressLine1, other.addressLine1)
                && Objects.equals(addressLine2, other.addressLine2) && Objects.equals(businessId, other.businessId)
                && Objects.equals(city, other.city) && Objects.equals(country, other.country)
                && Objects.equals(countryCode, other.countryCode) && Objects.equals(createdDt, other.createdDt)
                && Objects.equals(email, other.email) && Objects.equals(firstName, other.firstName)
                && Objects.equals(fyndrHandle, other.fyndrHandle) && Objects.equals(gender, other.gender)
                && isBusiness == other.isBusiness && Objects.equals(lastName, other.lastName)
                && Objects.equals(objId, other.objId) && Objects.equals(phone, other.phone)
                && Objects.equals(postalCode, other.postalCode) && Objects.equals(qrid, other.qrid)
                && Objects.equals(state, other.state) && Objects.equals(yob, other.yob);
    }

}
